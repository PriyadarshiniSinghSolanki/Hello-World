/*
 * MergeSort.c
 *
 *  Created on: 20-Sep-2017
 *      Author: Sys-5304
 */
#include <stdio.h>
#include <stdlib.h>

int max = 11;
int arr[11] = { 10, 14, 19, 26, 27, 31, 33, 35, 42, 44, 0 };
int arrNew[11];

void merging(int low, int mid, int high) {
	int l1, l2, i;
	for (l1 = low, l2 = mid + 1, i = low; l1 <= mid && l2 <= high; i++) {
		if (arr[l1] <= arr[l2])
			arrNew[i] = arr[l1++];
		else
			arrNew[i] = arr[l2++];
	}

	while (l1 <= mid)
		arrNew[i++] = arr[l1++];

	while (l2 <= high)
		arrNew[i++] = arr[l2++];

	for (i = low; i <= high; i++)
		arr[i] = arrNew[i];
}

void sort(int low, int high) {
	int mid;
	if (low < high) {
		mid = (low + high) / 2;
		sort(low, mid);
		sort(mid + 1, high);
		merging(low, mid, high);
	} else {
		return;
	}
}

int main() {
	int i;

	printf("List before sorting\n");

	for (i = 0; i < max; i++)
		printf("%d ", arr[i]);

	sort(0, max);

	printf("\nList after sorting\n");

	for (i = 0; i < max; i++)
		printf("%d ", arr[i]);
}
